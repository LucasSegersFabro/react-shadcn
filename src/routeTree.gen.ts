/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ThemeIndexImport } from './routes/theme/index'
import { Route as TableIndexImport } from './routes/table/index'
import { Route as FormIndexImport } from './routes/form/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ThemeIndexRoute = ThemeIndexImport.update({
  id: '/theme/',
  path: '/theme/',
  getParentRoute: () => rootRoute,
} as any)

const TableIndexRoute = TableIndexImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => rootRoute,
} as any)

const FormIndexRoute = FormIndexImport.update({
  id: '/form/',
  path: '/form/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/form/': {
      id: '/form/'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormIndexImport
      parentRoute: typeof rootRoute
    }
    '/table/': {
      id: '/table/'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableIndexImport
      parentRoute: typeof rootRoute
    }
    '/theme/': {
      id: '/theme/'
      path: '/theme'
      fullPath: '/theme'
      preLoaderRoute: typeof ThemeIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/form': typeof FormIndexRoute
  '/table': typeof TableIndexRoute
  '/theme': typeof ThemeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/form': typeof FormIndexRoute
  '/table': typeof TableIndexRoute
  '/theme': typeof ThemeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/form/': typeof FormIndexRoute
  '/table/': typeof TableIndexRoute
  '/theme/': typeof ThemeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/form' | '/table' | '/theme'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/form' | '/table' | '/theme'
  id: '__root__' | '/' | '/about' | '/form/' | '/table/' | '/theme/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  FormIndexRoute: typeof FormIndexRoute
  TableIndexRoute: typeof TableIndexRoute
  ThemeIndexRoute: typeof ThemeIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  FormIndexRoute: FormIndexRoute,
  TableIndexRoute: TableIndexRoute,
  ThemeIndexRoute: ThemeIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/form/",
        "/table/",
        "/theme/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/form/": {
      "filePath": "form/index.tsx"
    },
    "/table/": {
      "filePath": "table/index.tsx"
    },
    "/theme/": {
      "filePath": "theme/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
